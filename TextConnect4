import random
#used this webiste for ascii art https://patorjk.com/software/taag/#p=display&f=Graffiti&t=Type%20Something%20
b='''
    _____                            _     ______
  / ____|                          | |   |  ____|
 | |     ___  _ __  _ __   ___  ___| |_  | |__ ___  _   _ _ __
 | |    / _ \| '_ \| '_ \ / _ \/ __| __| |  __/ _ \| | | | '__|
 | |___| (_) | | | | | | |  __/ (__| |_  | | | (_) | |_| | |
  \_____\___/|_| |_|_| |_|\___|\___|\__| |_|  \___/ \__,_|_|
'''
"""
     sampleBoard=[[1,2,3],[4,5,6],[7,8,9]]
     print(sampleBoard)
     for row in range(len(sampleBoard)):    #range(len(sampleBoard))->[0,1,2]
          for columns in range(len(sampleBoard[row])):
               print(sampleBoard[row][columns])
"""
print(b)
print("Directions- Pick a column to drop your piece into it. After completing your turn the next player goes. To win you have to get four in a row it can be vertically, diagnolly, and horizontal. ")
print()
class PrintBoard:
     @staticmethod
     def printBoard(board):
          for r in range(6):
               print(board[r][0]+"|"+board[r][1]+"|"+board[r][2]+"|"+board[r][3]+"|"+board[r][4]+"|"+board[r][5]+"|"+board[r][6])
               if r<8:
                    print("-"*14)
#returns a true or false value on whether we can choose that spot
def chooseSpot(r,c,symbol,board):
     #if the spot is open
     if board[r][c] == " ":
          #add the symbol and return true
          board[r][c]=symbol
          return True
     return False
def catGame(board):
     #check every spot to see if there is something
     for row in range(len(board)):    #range(len(sampleBoard))->[0,1,2]
          for columns in range(len(board[row])):
               if (board[row][columns]) == " ":
                    return False
     print("CAT GAME!")
     return True         #return stop the function and give a value back
def goodInput(c,symbol,board):
     #check if the input is a number,check 1-7 , check if c is full , seperate function for gravity
     # c-=1
     #isnumeri
     if c.isnumeric():
          pass
     else:
          print("Bad Input!")
          return False
     if (int(c)) in range(1,8):
          pass
     else:
          print("Bad Input!")
          return False
     if gravity(int(c),symbol,board) == -1:
          print("Column Full")
          return False
def gravity(c,symbol,board):
     r=5
     c-=1
     while r != -1:
          x = chooseSpot(r,c,symbol,board)
          if x == False:
               r-=1
          else:
               break
     return r
def checkForWinners(board):
     #check horizontally
     for r in range(len(board)):
          #r is the rows and the columns are the same for each row
          horizstr = "".join(board[r])
          if "XXXX" in horizstr:
               print("X WON")
               PrintBoard.printBoard(board)
               return True
          if "OOOO" in horizstr:
               print("O WON")
               PrintBoard.printBoard(board)
               return True
     #check vertically
     for c in range(len(board[0])):
          vertstr = ""
          for r in range(len(board)):
               vertstr += board[r][c]
          if "XXXX" in vertstr:
               print("X WON")
               PrintBoard.printBoard(board)
               return True
          if "OOOO" in vertstr:
               print("O WON")
               PrintBoard.printBoard(board)
               return True
               #r is the rows and the columns are the same for each row
               
     # #check upper diagonally
     d_length = [4,5,6,6,5,4]
     startr = [3,4,5,5,5,5]
     startc = [0,0,0,1,2,3]
     for j in range(6):
          dstr = ""
          for i in range(d_length[j]):
               dstr +=board[startr[j]-i][startc[j]+i]
          if "XXXX" in dstr:
               print("X WON")
               PrintBoard.printBoard(board)
               return True
          if "OOOO" in dstr:
               print("O WON")
               PrintBoard.printBoard(board)
               return True
     # check lower diagonally
     d_length = [4,5,6,6,5,4]
     startr = [2,1,0,0,0,0]
     startc = [0,0,0,1,2,3]
     for j in range(6):
          dstr = ""
          for i in range(d_length[j]):
               dstr +=board[startr[j]+i][startc[j]+i]
          if "XXXX" in dstr:
               print("X WON")
               PrintBoard.printBoard(board)
               return True
          if "OOOO" in dstr:
               print("O WON")
               PrintBoard.printBoard(board)
               return True
          
          
     # (REPLACE WITH CODE)
     # takes the value stored in random_result, somehow treats the value as a variable,
     # assigns that given variable the string value that is stored in computer_mark
board=[[" "," "," "," "," "," "," "],[" "," "," "," "," "," "," "],[" "," "," "," "," "," "," "],[" "," "," "," "," "," "," "],[" "," "," "," "," "," "," "],[" "," "," "," "," "," "," "]]
symbol="X"
while symbol!="Q":
     PrintBoard.printBoard(board)
     while goodInput((input("col: ")),symbol,board) == False:
          pass
     if checkForWinners(board):
          symbol="Q"
     #switching our symbols
     if symbol=="X":
          symbol="O"
     elif symbol=="O":
          symbol="X"
